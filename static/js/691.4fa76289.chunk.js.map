{"version":3,"file":"static/js/691.4fa76289.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Section/Section.styled.js","components/Section/Section.js","components/Form/Form.styled.js","components/Form/Form.js","components/ContactsItem/ContactsItem.styled.js","components/ContactsItem/ContactsItem.js","components/ContactsList/ContactsList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/PhonebookPage.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","import styled from 'styled-components';\n\nexport const SectionStyle = styled.section`\n  padding: ${p => p.theme.space[6]}px;\n  font-size: ${p => p.theme.fontSizes.l};\n`;","import PropTypes from 'prop-types';\nimport { SectionStyle } from 'components/Section/Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionStyle>\n      {title && <h2>{title}</h2>}\n      {children}\n    </SectionStyle>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};","import styled from \"styled-components\";\nimport { Form, Field } from 'formik';\n\nexport const FormWrapper = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  padding: ${p => p.theme.space[4]}px;\n  margin-top: ${p => p.theme.space[5]}px;\n  width: ${p => p.theme.space[9]}px;\n  border: ${p => p.theme.borders.normal} black;\n  border-radius: ${p => p.theme.radii.normal};\n  background-color: ${p => p.theme.colors.bgStats};\n`;\n\nexport const FormLabel = styled.label`\n  font-size: ${p => p.theme.fontSizes.m};\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n\nexport const FormItem = styled(Field)`\n  margin-bottom: ${p => p.theme.space[5]}px;\n  width: ${p => p.theme.space[8]}px;\n`;\n\nexport const FormBtn = styled.button`\n  width: ${p => p.theme.space[7]}px;\n  cursor: pointer;\n  background-color: ${p => p.theme.colors.btnColor};\n  border-radius: ${p => p.theme.radii.small};\n\n  &:focus, &:hover {\n    background-color: ${p => p.theme.colors.accentColor};\n  }\n`;","import { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { FormWrapper, FormItem, FormLabel, FormBtn } from 'components/Form/Form.styled';\n\nexport const InputForm = () => {\n\n  const dispatch = useDispatch();\n   \n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(\n      addContact({\n        name: values.name,\n        number: values.number,\n      })\n    );\n    resetForm();\n  };\n\n  \n    return (\n      <Formik onSubmit={handleSubmit} initialValues={{ name: '', number: '' }}>\n        <FormWrapper>\n          <FormLabel>Name</FormLabel>\n          <FormItem\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <FormLabel>Number</FormLabel>\n          <FormItem\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <FormBtn type=\"submit\">Add contact</FormBtn>\n        </FormWrapper>\n      </Formik>   \n    )\n  \n}\n","import styled from 'styled-components';\n\nexport const ContactsItem = styled.li`\n  display: flex;\n  align-items: center;\n  gap: ${p => p.theme.space[3]}px;\n  font-size: ${p => p.theme.fontSizes.m};\n  margin-bottom: ${p => p.theme.space[3]}px;\n\n  &::before {\n    content: \"\";\n    width: ${p => p.theme.space[3]}px;\n    height: ${p => p.theme.space[3]}px;\n    border-radius: ${p => p.theme.radii.round};\n    background-color: ${p => p.theme.colors.accentColor};\n  }\n`;\n\nexport const DeleteBtn = styled.button`\n  margin-left: auto;\n  background-color: ${p => p.theme.colors.btnColor};\n  border-radius: ${p => p.theme.radii.small};\n\n  &:focus, &:hover {\n    background-color: ${p => p.theme.colors.accentColor};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { ContactsItem, DeleteBtn } from 'components/ContactsItem/ContactsItem.styled'\n\nexport const ContactsListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(id))\n\n  return (\n    <ContactsItem >\n      <p>{name}: {number}</p>\n      <DeleteBtn onClick={handleDelete}>Delete</DeleteBtn>\n    </ContactsItem>\n  );\n}\n\nContactsListItem.prototype = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport { Box } from 'components/Box';\nimport { ContactsListItem } from 'components/ContactsItem/ContactsItem';\n\n\n\nexport const ContactList = () => {\n  const items = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const getFilteredContacts = (items, filter) => {\n    \n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()));\n  }\n\n  const filteredContacts = getFilteredContacts(items, filter);\n  \n\n  \n  return (\n    <Box as=\"ul\" ml={6} mt={5} width=\"480px\">\n      {filteredContacts.map(({ name, id, number }) => (\n        <ContactsListItem key={id} id={id} name={name} number={number} />\n      ))}\n    </Box>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  })),\n};","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: ${p => p.theme.fontSizes.m};\n  margin-bottom: ${p => p.theme.space[3]}px;\n  margin-top: ${p => p.theme.space[3]}px;\n`;\n\nexport const FilterInput = styled.input`\n  margin-top: ${p => p.theme.space[3]}px;\n  width: ${p => p.theme.space[8]}px;\n`;","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateFilter } from \"redux/contacts/contactsSlice\";\nimport { selectFilter } from 'redux/contacts/selectors';\n\nimport { FilterLabel, FilterInput } from 'components/Filter/Filter.styled';\n\nexport const Filter = () => {\n\n  const dispatch = useDispatch();\n  const filterValue = useSelector(selectFilter);\n  const handleFilterChange = event => dispatch(updateFilter(event.target.value));\n\n  return (\n    <FilterLabel>Find contacts by name\n      <FilterInput\n        type=\"text\"\n        value={filterValue}\n        onChange={handleFilterChange}\n      />\n    </FilterLabel>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectContacts, selectIsLoading, selectError } from 'redux/contacts/selectors';\nimport { Box } from 'components/Box';\nimport { Section } from 'components/Section/Section';\nimport { InputForm } from 'components/Form/Form';\nimport { ContactList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\n\nconst PhonebookPage = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n      <Box>\n        <Section title=\"Phonebook\">\n          <InputForm />\n        </Section>\n        <Section title=\"Contacts\">\n        <Filter />\n        {isLoading && !error && <b>Waiting please...</b>}\n        {error && <b>{error}</b>}\n        {items.length > 0 && <ContactList />}\n        </Section>\n      </Box>\n  );\n}\n\nexport default PhonebookPage;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","SectionStyle","styled","p","theme","space","fontSizes","l","Section","title","children","FormWrapper","Form","borders","normal","radii","colors","bgStats","FormLabel","m","FormItem","Field","FormBtn","btnColor","small","accentColor","InputForm","dispatch","useDispatch","onSubmit","values","resetForm","addContact","name","number","initialValues","type","pattern","required","ContactsItem","round","DeleteBtn","ContactsListItem","id","onClick","deleteContact","prototype","PropTypes","ContactList","filteredContacts","contact","toLowerCase","includes","getFilteredContacts","useSelector","Box","as","ml","mt","width","map","FilterLabel","FilterInput","Filter","filterValue","value","onChange","event","updateFilter","target","useEffect","fetchContacts","length","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}